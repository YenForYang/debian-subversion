/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_apache_subversion_javahl_remote_RemoteSession */

#ifndef _Included_org_apache_subversion_javahl_remote_RemoteSession
#define _Included_org_apache_subversion_javahl_remote_RemoteSession
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    cancelOperation
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_cancelOperation
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    reparent
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_reparent
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getSessionUrl
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getSessionUrl
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getSessionRelativePath
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getSessionRelativePath
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getReposRelativePath
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getReposRelativePath
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getReposUUID
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getReposUUID
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getReposRootUrl
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getReposRootUrl
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getLatestRevision
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getLatestRevision
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getRevisionByTimestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getRevisionByTimestamp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getRevisionProperties
 * Signature: (J)Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getRevisionProperties
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getRevisionProperty
 * Signature: (JLjava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getRevisionProperty
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getMergeinfo
 * Signature: (Ljava/lang/Iterable;JLorg/apache/subversion/javahl/types/Mergeinfo/Inheritance;Z)Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getMergeinfo
  (JNIEnv *, jobject, jobject, jlong, jobject, jboolean);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getLog
 * Signature: (Ljava/lang/Iterable;JJIZZZLjava/lang/Iterable;Lorg/apache/subversion/javahl/callback/LogMessageCallback;)V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getLog
  (JNIEnv *, jobject, jobject, jlong, jlong, jint, jboolean, jboolean, jboolean, jobject, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    checkPath
 * Signature: (Ljava/lang/String;J)Lorg/apache/subversion/javahl/types/NodeKind;
 */
JNIEXPORT jobject JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_checkPath
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    stat
 * Signature: (Ljava/lang/String;J)Lorg/apache/subversion/javahl/types/DirEntry;
 */
JNIEXPORT jobject JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_stat
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getLocations
 * Signature: (Ljava/lang/String;JLjava/lang/Iterable;)Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getLocations
  (JNIEnv *, jobject, jstring, jlong, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getLocationSegments
 * Signature: (Ljava/lang/String;JJJLorg/apache/subversion/javahl/callback/RemoteLocationSegmentsCallback;)V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getLocationSegments
  (JNIEnv *, jobject, jstring, jlong, jlong, jlong, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getFileRevisions
 * Signature: (Ljava/lang/String;JJZLorg/apache/subversion/javahl/callback/RemoteFileRevisionsCallback;)V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getFileRevisions
  (JNIEnv *, jobject, jstring, jlong, jlong, jboolean, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    getLocks
 * Signature: (Ljava/lang/String;Lorg/apache/subversion/javahl/types/Depth;)Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_getLocks
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    finalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_finalize
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    nativeDispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_nativeDispose
  (JNIEnv *, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    nativeChangeRevisionProperty
 * Signature: (JLjava/lang/String;[B[B)V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_nativeChangeRevisionProperty
  (JNIEnv *, jobject, jlong, jstring, jbyteArray, jbyteArray);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    nativeGetFile
 * Signature: (JLjava/lang/String;Ljava/io/OutputStream;Ljava/util/Map;)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_nativeGetFile
  (JNIEnv *, jobject, jlong, jstring, jobject, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    nativeGetDirectory
 * Signature: (JLjava/lang/String;ILjava/util/Map;Ljava/util/Map;)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_nativeGetDirectory
  (JNIEnv *, jobject, jlong, jstring, jint, jobject, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    nativeStatus
 * Signature: (Ljava/lang/String;JLorg/apache/subversion/javahl/types/Depth;Lorg/apache/subversion/javahl/ISVNEditor;Lorg/apache/subversion/javahl/ISVNReporter;)V
 */
JNIEXPORT void JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_nativeStatus
  (JNIEnv *, jobject, jstring, jlong, jobject, jobject, jobject);

/*
 * Class:     org_apache_subversion_javahl_remote_RemoteSession
 * Method:    nativeHasCapability
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_apache_subversion_javahl_remote_RemoteSession_nativeHasCapability
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
